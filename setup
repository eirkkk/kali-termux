#!/data/data/com.nightmare.neo/files/usr/bin/bash

countdown=60
clear

function display_countdown() {
    local hours=$((countdown / 3600))
    local minutes=$(( (countdown % 3600) / 60 ))
    local seconds=$((countdown % 60))
    echo -ne "Time remaining: $(printf "%02d:%02d:%02d" $hours $minutes $seconds)\r"
}

echo "Select version to install:"
echo "1) Root version"
read -p "Enter choice (1): " version_choice

echo "Choose the distribution:"
echo "- 1) Kali"
echo "- 2) Parrot"
echo "- 3) Ubuntu"
read -p "Enter choice (1-3): " os_choice

if [[ $version_choice -ne 1 ]]; then
    echo "Invalid choice. Exiting."
    exit 1
fi

if [[ $os_choice -lt 1 || $os_choice -gt 3 ]]; then
    echo "Invalid OS choice. Exiting."
    exit 1
fi

case $os_choice in
    1) os_name="kali"
       os_url="https://kali.download/nethunter-images/current/rootfs/kali-nethunter-rootfs-minimal-arm64.tar.xz" ;;
    2) os_name="parrot"
       os_url="https://deb.parrot.sh/direct/parrot/iso/6.1/Parrot-rootfs-6.1_arm64.tar.xz" ;;
    3) os_name="ubuntu"
       os_url="https://cdimage.ubuntu.com/ubuntu-base/jammy/daily/current/jammy-base-arm64.tar.gz" ;;
esac

echo "Updating package list..."
pkg update -y && echo "Update completed." || { echo "Update failed."; exit 1; }

clear

echo "Installing required packages..."
pkg install x11-repo -y
pkg install proot-distro termux-x11-nightly wget git pulseaudio debootstrap tsu -y || { echo "Package installation failed."; exit 1; }

wget -q "$os_url" -O rootfs.tar.xz || { echo "Download failed."; exit 1; }
wget -q https://raw.githubusercontent.com/eirkkk/kali-termux/refs/heads/main/$os_name -O $os_name || { echo "Download failed."; exit 1; }
chmod +x $os_name || { echo "Failed to change permissions."; exit 1; }
mv $os_name /data/data/com.nightmare.neo/files/usr/bin/ || { echo "Move failed."; exit 1; }

os_dir="/data/local/$os_name"
echo "Creating directory $os_dir..."
sudo mkdir -p "$os_dir" || { echo "Directory creation failed."; exit 1; }
if [[ $os_name == "kali" ]]; then
    sudo tar -xf rootfs.tar.xz -C /data/local/ || { echo "Extraction failed."; exit 1; }
    sudo mv /data/local/chroot/kali-arm64/* "$os_dir"
    sudo rm -rf /data/local/chroot/kali-arm64 /data/local/chroot
else
    sudo tar -xf rootfs.tar.xz -C "$os_dir" || { echo "Extraction failed."; exit 1; }
fi

termux-setup-storage

sudo mkdir -p "$os_dir/system"
sudo mkdir -p "$os_dir/data"
sudo mkdir -p "$os_dir/sdcard"

su -c "echo 'nameserver 8.8.8.8' > /data/local/$os_name/etc/resolv.conf"
su -c "echo 'APT::Sandbox::User \"root\";' > /data/local/$os_name/etc/apt/apt.conf.d/01-android-nosandbox"
su -c "echo '127.0.0.1 localhost' > /data/local/$os_name/etc/hosts"
sudo chroot "$os_dir" /bin/su -c "groupadd -g 3003 aid_inet 2>/dev/null"
sudo chroot "$os_dir" /bin/su -c "groupadd -g 3004 aid_net_raw 2>/dev/null"
sudo chroot "$os_dir" /bin/su -c "groupadd -g 1003 aid_graphics 2>/dev/null"
sudo chroot "$os_dir" /bin/su -c "usermod -g 3003 -G 3003,3004 -a _apt 2>/dev/null"
sudo chroot "$os_dir" /bin/su -c "usermod -G 3003 -a root 2>/dev/null"
sudo chroot "$os_dir" /bin/su -c "ln -sf /usr/share/zoneinfo/Asia/Taipei /etc/localtime 2>/dev/null"
sudo chroot "$os_dir" /bin/su -c "locale-gen en_US.UTF-8 2>/dev/null"

rm -f rootfs.tar.xz

while [ $countdown -gt 0 ]; do
    display_countdown
    sleep 1
    ((countdown--))
done

echo -ne "\r\033[K"
echo "Execution completed successfully!"
